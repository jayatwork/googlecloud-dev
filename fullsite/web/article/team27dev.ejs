<!DOCTYPE html>

<html>
   <head>
         <meta charset="UTF-8">
         

      <!-- The welcome struct (shown in the main.go code) is received within the HTML and we just need to use the . operator and retrieve the information we want -->
         <title>Team27Live</title>  
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
      <link rel="stylesheet" href="/static/stylesheets/welcome-template.css">
      <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
  
 
  <style>
  .jumbotron {
    background-color: #f4511e;
    color: #fff;
    padding: 100px 25px;
  }
  .container-fluid {
    padding: 60px 50px;
  }
  .bg-grey {
    background-color: #f6f6f6;
  }
  .logo-small {
    color: #f4511e;
    font-size: 50px;
  }
  .logo {
    color: #f4511e;
    font-size: 200px;
  }
  @media screen and (max-width: 768px) {
    .col-sm-4 {
      text-align: center;
      margin: 25px 0;
    }
  }
  </style>
  
   
      

<nav class="navbar navbar-inverse">
  <div class="container-fluid">
    <div class="navbar-header">
      <a class="navbar-brand" href="https://github.com/jayatwork/googlecloud-dev.git">team27 SOURCE (github)</a>
    </div>
    <ul class="nav navbar-nav">
      <li class="active"><a href="../web/">Home</a></li>
      <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="news.ejs">News <span class="caret"></span></a>
        <ul class="dropdown-menu">
          <li><a href="#">Page 1-1</a></li>
          <li><a href="#">Page 1-2</a></li>
          <li><a href="#">Page 1-3</a></li>
        </ul>
      </li>
      <li><a href="all27.ejs">All things 27</a></li>
      <li><a href="vids.ejs">Recent vids</a></li>
    </ul>
  </div>
</nav>
  
So how is <b> team27live </b> actually maintained and made visible to the wider interwebs>?<br>
Welp this is how.  WARNING: the following videos could bore you to death beware !!! If documentation
is preferred go here <a href="https://github.com/jayatwork/googlecloud-dev/blob/experimental/fullsite/Readme.adoc">team27 Fullsite in GoogleCloud</a>

<!-- current work -->
<p><strong>What's being worked on</strong></p><br>
        
    <div id="id01"></div>

<script>
var xmlhttp = new XMLHttpRequest();
var url = "servers.json";

xmlhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
        var myArr = JSON.parse(this.responseText);
        myFunction(myArr);
    }
};
xmlhttp.open("GET", url, true);
xmlhttp.send();

function myFunction(arr) {
    var out = "";
    var i;
    
    
    for(i = 0; i < arr.length; i++) {
        if (i < 3) {  <!-- determine where to drop into collection -->
            out += '<a href="' + arr[i].url + '">' +
            arr[i].display + '</a><br><br>';
        }
    }
    document.getElementById("id01").innerHTML = out;
}
</script>




<img alt="rational detail" src="imgs/RLKS_rpt_topology.gif">

<h3> Rational Licensing Redundant 3-server </h3>

<p>
<b>To configure redundant license servers: </b> <br><br> 

    1. Install Rational License Key Server on three computers. <br>
    2. Import a license file that you receive from IBM on each license server. <br>
    3. Start the license servers. The sequence is important, Primary instance should be started first. <br>
    4. Give client users the Primary, Secondary, and Tertiary (Backup) license server host names in the order that you requested the host names in the RationalÂ® License Key Center. Users must enter the host names in their License Key Administrators (LKAD).
    5. When shutting down a three-server redundant license server system, there is a one-minute delay before the servers shut down. lmdown shuts down all three license server systems of a set of redundant license server systems. If you need to shut down one of a set of redundant license server systems (not recommended because you are left with two points of failure), you must kill both the lmgrd and vendor daemon processes on that license server machine.

</p>

<a href="https://www.ibm.com/support/knowledgecenter/en/SSSTWP_8.1.4/com.ibm.rational.license.doc/topics/r_redundant_servers_win.html"> read more </a>



   </body>
</html>